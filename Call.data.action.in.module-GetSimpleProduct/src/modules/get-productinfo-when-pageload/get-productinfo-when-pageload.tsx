/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import * as React from 'react';
import { SimpleProduct } from '@msdyn365-commerce/retail-proxy';

import { IGetProductinfoWhenPageloadData } from './get-productinfo-when-pageload.data';
import { IGetProductinfoWhenPageloadProps } from './get-productinfo-when-pageload.props.autogenerated';
//import { IGetSimpleproductWithAvailabilityData } from '../../actions/get-simpleproduct-with-availability.action';
export interface IGetProductinfoWhenPageloadViewProps extends IGetProductinfoWhenPageloadProps<IGetProductinfoWhenPageloadData> {
    getSimpleproductWithAvailabilityData: SimpleProduct | undefined;
}

/**
 *
 * GetProductinfoWhenPageload component
 * @extends {React.PureComponent<IGetProductinfoWhenPageloadProps<IGetProductinfoWhenPageloadData>>}
 */
class GetProductinfoWhenPageload extends React.PureComponent<IGetProductinfoWhenPageloadProps<IGetProductinfoWhenPageloadData>> {
    constructor(props: IGetProductinfoWhenPageloadProps<IGetProductinfoWhenPageloadData>) {
        super(props);
    }

    public render(): JSX.Element | null {
        const {
            data: { simpleproductWithAvailabilities }
        } = this.props;
        if (simpleproductWithAvailabilities === undefined) {
            console.log(`simpleproductWithAvailabilities from GetProductinfoWhenPageload in render is undefined`);
        }
        const simpleProduct = simpleproductWithAvailabilities.result;
        console.log(`${simpleProduct?.ItemId} from GetProductinfoWhenPageload in render`);
        const viewProps: IGetProductinfoWhenPageloadViewProps = {
            ...this.props,
            getSimpleproductWithAvailabilityData: simpleproductWithAvailabilities.result
        };
        return this.props.renderView(viewProps);
    }
}

export default GetProductinfoWhenPageload;
